<!DOCTYPE html>
<html lang="uk">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>–ù–∞—à—ñ –≤—ñ–¥–µ–æ</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: linear-gradient(135deg, #f0f4ff, #e6f7f5);
      margin: 0;
      padding: 0;
      display: flex;
      flex-direction: column;
      align-items: center;
      color: #333;
    }

    /* –ë–∞–Ω–Ω–µ—Ä */
    .banner {
      width: 100%;
      height: 230px;
      background: url("https://i.postimg.cc/MZ0pdBcD/image.jpg") no-repeat center;
      background-size: cover;
      position: relative;
    }
    .banner::after {
      content: "";
      position: absolute;
      inset: 0;
      background: rgba(0, 0, 0, 0.3);
    }
    .banner-text {
      position: absolute;
      bottom: 20px;
      left: 50%;
      transform: translateX(-50%);
      font-size: 28px;
      font-weight: bold;
      color: #fff;
      text-shadow: 0 2px 8px rgba(0,0,0,0.6);
      z-index: 1;
    }

    /* –•–µ–¥–µ—Ä */
    header {
      width: 100%;
      display: flex;
      justify-content: flex-end;
      align-items: center;
      background: #ffffffd9;
      backdrop-filter: blur(10px);
      padding: 15px 30px;
      box-shadow: 0 3px 8px rgba(0,0,0,0.12);
      position: sticky;
      top: 0;
      z-index: 1000;
    }

    .add-btn {
      width: 60px;
      height: 60px;
      border-radius: 50%;
      background: linear-gradient(135deg, #007bff, #00c6ff);
      color: #fff;
      font-size: 32px;
      font-weight: bold;
      border: none;
      cursor: pointer;
      transition: 0.3s;
      display: flex;
      justify-content: center;
      align-items: center;
      box-shadow: 0 6px 15px rgba(0,123,255,0.3);
    }
    .add-btn:hover {
      transform: scale(1.1);
      background: linear-gradient(135deg, #0056b3, #0096c7);
    }

    /* –ì–∞–ª–µ—Ä–µ—è */
    .gallery {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
      gap: 30px;
      padding: 40px 20px;
      width: 100%;
      max-width: 1400px;
    }

    .video-card {
      background: #fff;
      border-radius: 18px;
      overflow: hidden;
      box-shadow: 0 6px 16px rgba(0,0,0,0.12);
      transition: transform 0.35s, box-shadow 0.35s;
      cursor: pointer;
      position: relative;
    }
    .video-card:hover {
      transform: translateY(-8px);
      box-shadow: 0 10px 24px rgba(0,0,0,0.18);
    }

    .video-card iframe {
      width: 100%;
      height: 500px;
      border: none;
      pointer-events: none;
      filter: brightness(0.9);
      transition: filter 0.3s;
    }
    .video-card:hover iframe {
      filter: brightness(1);
    }

    .play-icon {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      font-size: 60px;
      color: rgba(255,255,255,0.9);
      text-shadow: 0 3px 12px rgba(0,0,0,0.6);
      pointer-events: none;
    }

    /* –ö–Ω–æ–ø–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è */
    .delete-btn {
      position: absolute;
      top: 12px;
      right: 12px;
      background: rgba(255, 0, 0, 0.8);
      color: #fff;
      border: none;
      border-radius: 50%;
      width: 40px;
      height: 40px;
      font-size: 20px;
      font-weight: bold;
      cursor: pointer;
      opacity: 0;
      transition: 0.3s;
    }
    .video-card:hover .delete-btn {
      opacity: 1;
    }

    /* –í—Ç–æ—Ä–∞—è —á–∞—Å—Ç—å */
    .extra-section {
      background: linear-gradient(135deg, #ffffff, #f1faff);
      width: 100%;
      max-width: 1200px;
      margin: 40px auto;
      padding: 50px;
      border-radius: 20px;
      box-shadow: 0 6px 18px rgba(0,0,0,0.12);
      text-align: center;
    }
    .extra-section h2 {
      margin-bottom: 20px;
      color: #0077b6;
      font-size: 28px;
    }
    .extra-section p {
      font-size: 18px;
      line-height: 1.6;
      color: #444;
    }
  </style>
</head>
<body>
  <!-- –ë–∞–Ω–Ω–µ—Ä -->
  <div class="banner">
    <div class="banner-text">–ù–∞—à—ñ –≤—ñ–¥–µ–æ üé•</div>
  </div>

  <!-- –í–µ—Ä—Ö–Ω–∏–π –±–ª–æ–∫ —Å –∫–Ω–æ–ø–∫–æ–π -->
  <header>
    <button class="add-btn" onclick="addVideo()">+</button>
  </header>

  <!-- –ì–∞–ª–µ—Ä–µ—è –≤–∏–¥–µ–æ -->
  <div class="gallery" id="gallery"></div>

  <!-- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª -->
  <div class="extra-section">
    <h2>–ù–∞—à –∫–æ–Ω—Ç–µ–Ω—Ç</h2>
    <p>–ó–¥–µ—Å—å —Å–æ–±—Ä–∞–Ω—ã —Å–∞–º—ã–µ –ª—É—á—à–∏–µ –º–æ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–º–∏ –º—ã —Ö–æ—Ç–∏–º –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å –≤–∞–º–∏.  
       –°–º–æ—Ç—Ä–∏—Ç–µ, –≤–¥–æ—Ö–Ω–æ–≤–ª—è–π—Ç–µ—Å—å –∏ –æ—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å —Å –Ω–∞–º–∏! üíô</p>
  </div>

  <script>
    // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö –≤—ñ–¥–µ–æ
    window.onload = function() {
      let savedVideos = JSON.parse(localStorage.getItem("videos")) || [];
      savedVideos.forEach(obj => {
        createVideoCard(obj.embedUrl, obj.originalUrl);
      });
    };

    function createVideoCard(embedUrl, originalUrl) {
      let card = document.createElement("div");
      card.className = "video-card";
      card.innerHTML = `
        <iframe src="${embedUrl}" allowfullscreen></iframe>
        <div class="play-icon">‚ñ∂</div>
        <button class="delete-btn">‚úñ</button>
      `;

      // –ö–ª—ñ–∫ –ø–æ –∫–∞—Ä—Ç—Ü—ñ ‚Üí –≤—ñ–¥–∫—Ä–∏–≤–∞—î TikTok
      card.onclick = (e) => {
        if (!e.target.classList.contains("delete-btn")) {
          window.open(originalUrl, "_blank");
        }
      };

      // –ö–ª—ñ–∫ –ø–æ –∫–Ω–æ–ø—Ü—ñ –≤–∏–¥–∞–ª–µ–Ω–Ω—è
      card.querySelector(".delete-btn").onclick = (e) => {
        e.stopPropagation();
        let pass = prompt("–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è:");
        if (pass === "0002") {
          card.remove();
          removeFromStorage(embedUrl);
        } else {
          alert("–ù–µ–≤—ñ—Ä–Ω–∏–π –ø–∞—Ä–æ–ª—å!");
        }
      };

      document.getElementById("gallery").appendChild(card);
    }

    function addVideo() {
      let url = prompt("–í—Å—Ç–∞–≤ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ TikTok –≤—ñ–¥–µ–æ:");
      if (url) {
        let videoIdMatch = url.match(/video\/(\d+)/);
        if (videoIdMatch) {
          let videoId = videoIdMatch[1];
          let embedUrl = `https://www.tiktok.com/embed/v2/${videoId}`;
          createVideoCard(embedUrl, url);

          let savedVideos = JSON.parse(localStorage.getItem("videos")) || [];
          savedVideos.push({ embedUrl: embedUrl, originalUrl: url });
          localStorage.setItem("videos", JSON.stringify(savedVideos));
        } else {
          alert("–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ!");
        }
      }
    }

    function removeFromStorage(embedUrl) {
      let savedVideos = JSON.parse(localStorage.getItem("videos")) || [];
      savedVideos = savedVideos.filter(obj => obj.embedUrl !== embedUrl);
      localStorage.setItem("videos", JSON.stringify(savedVideos));
    }
  </script>
</body>
</html>
